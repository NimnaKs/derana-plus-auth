# --- App ---
spring.application.name=derana-plus-auth
server.port=8081

# --- Datasource (from your staging props) ---
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://dflix-stg.c3wk2m0wgupf.ap-southeast-1.rds.amazonaws.com:3306/derana-ott-stg?createDatabaseIfNotExist=true
spring.datasource.username=admin
spring.datasource.password=1qaz2wsx
spring.datasource.hikari.maximum-pool-size=5

# --- JPA (from your staging props) ---
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# --- Custom (from your staging props) ---
app.tenant-id=1

# --- Mail (use env vars; donâ€™t hardcode secrets) ---
spring.mail.host=email-smtp.ap-southeast-1.amazonaws.com
spring.mail.port=587
spring.mail.username=AKIATCKAOATEI47HZYRO
spring.mail.password=BJhS4o5/usq3fqyGsMnhysaMNDzX+YiP9MhQOUIv1jRW
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# --- OAuth2: Google & Facebook (provide env vars) ---
spring.security.oauth2.client.registration.google.client-id=255816877819-ku2bckl6sjqtubvq7fvq1f1jas4u8bsn.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8085/login/oauth2/code/{registrationId}

spring.security.oauth2.client.registration.facebook.client-id=1085322593048513
spring.security.oauth2.client.registration.facebook.client-secret=eab656a6757daa000124b908d1f07e39
spring.security.oauth2.client.registration.facebook.scope=public_profile,email
spring.security.oauth2.client.registration.facebook.redirect-uri=http://localhost:8085/login/oauth2/code/{registrationId}

spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v18.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v18.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email,picture

# --- JWT ---
# Keep the style your code expects:
# 1) If your code uses these keys (from staging):
jwt.secret=a3f1c2e4b5d6f7890a1b2c3d4e5f60718293a4b5c6d7e8f90123456789abcdef
jwt.expiration=86400000

# 2) If your code uses a structured block (my default in services):
jwt.issuer=derana-plus-auth
jwt.access-ttl-sec=900
jwt.refresh-ttl-sec=1209600
devices.max-per-user=3


# --- Redis cache (from your staging props) ---
spring.data.redis.host=dflix-redish-prod.6vdhfa.ng.0001.apse1.cache.amazonaws.com
spring.data.redis.port=6379
spring.data.redis.timeout=60000
spring.cache.type=redis

# --- Firebase / Google service account file ---
# Put the uploaded service account JSON at: src/main/resources/google.json
firebase.credentials.path=classpath:google.json
